package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"

	"github.com/damianlebiedz/token-transfer-api/graph/model"
	"github.com/damianlebiedz/token-transfer-api/internal/service"
)

// Transfer mutation handling using service logic
func (r *mutationResolver) Transfer(_ context.Context, from string, to string, amount int32) (*model.TransferResult, error) {
	newBalance, err := service.Transfer(from, to, int(amount))
	if err != nil {
		return nil, fmt.Errorf("transfer failed: %w", err)
	}

	return &model.TransferResult{Balance: int32(newBalance)}, nil
}

func (r *queryResolver) Empty(_ context.Context) (*string, error) {
	panic(fmt.Errorf("not implemented: Empty - _empty"))
}

func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
